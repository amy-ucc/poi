/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.u3.frontend;
import javax.swing.*;
import com.u3.model.Building;
import com.u3.model.FloorMap;
import com.u3.model.Model;
import com.u3.model.Poi;
import com.u3.model.User;
import java.util.ArrayList;

/**
 *
 * @author Otis Ding
 */
public class popup extends javax.swing.JFrame {

    /**
     * Creates new form popup
     */
    
    private Poi Poi;
    private Model model;
    private String building;
    private String floor;
    private JLabel label;
    private User user;
   // private EditLayers_Popup layer_panel;
    
    public popup(Poi Poi, String building, String floor, Model model, JLabel label) {
        initComponents();
        this.Poi = Poi;
        this.building = building;
        this.floor = floor;
        this.model = model;
        this.label = label;
        user = model.getCurrUser();

        
        Delete.setVisible(true);
        this.setTitle("Edit");
        

        jTextArea1.setText(Poi.getLocDesc());
        jTextField1.setText(Poi.getLabel());
        jTextField2.setText(Poi.getRoomNum());

    
        if( Poi.getFavCount() >= 1 ){
            Fav.setSelected(true);
        }  else {
            Fav.setSelected(false);
        }
        
        if (user.getType().equals("admin")){
            Fav.setVisible(false);
            Delete.setVisible(true);
            Edit.setVisible(true);
            Layers.setVisible(true);
        } else if((user.getType().equals("general")) && (this.Poi.getClassification().equals("user")) ) {
            Fav.setVisible(true);
            Delete.setVisible(true);
            Edit.setVisible(true);
            Layers.setVisible(true);
        }else if((user.getType().equals("general")) && (this.Poi.getClassification().equals("admin")) ) {
            Fav.setVisible(true);
            Delete.setVisible(false);
            Edit.setVisible(false);
            Layers.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        base = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Fav = new javax.swing.JCheckBox();
        Layers = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        Edit.setText("Save");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel1.setText("POI Name");

        jLabel2.setText("Description");

        jLabel3.setText("Room Number");

        Fav.setText("Favourite");
        Fav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Layers.setText("Layers");
        Layers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LayersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout baseLayout = new javax.swing.GroupLayout(base);
        base.setLayout(baseLayout);
        baseLayout.setHorizontalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, baseLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Fav)
                .addContainerGap())
            .addGroup(baseLayout.createSequentialGroup()
                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Layers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jTextField1)
            .addComponent(jTextField2)
            .addGroup(baseLayout.createSequentialGroup()
                .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        baseLayout.setVerticalGroup(
            baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(baseLayout.createSequentialGroup()
                .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(baseLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1))
                    .addComponent(Fav))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Edit)
                    .addComponent(Delete)
                    .addComponent(Layers))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(base, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Action event for when the "Edit" button is clicked
    //I'm thinking it will send the string stored in the text box to the description field of the POI object that called this one
    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        this.Poi.setLocDesc(jTextArea1.getText());
        this.Poi.setLabel(jTextField1.getText());               //Using the POI's label field to store the name of the POI
        this.Poi.setRoomNum(jTextField2.getText());           //Storing the room number


        // Fav count/ label added -Christ
        if(Fav.isSelected()){
            this.user.addFav(Poi);
            //Poi.addFavCount();
            Poi.setLabel("Fav");
            //System.out.println(Poi.getFavCount());
        }
        else{
            this.user.removeFav(Poi);
            //Poi.removeFavCount();
            Poi.setLabel("");
            //System.out.println(Poi.getFavCount());
        }

        model.serialize();
    }//GEN-LAST:event_EditActionPerformed

    
    private void LayersActionPerformed(java.awt.event.ActionEvent evt){
       
       JFrame layer_panel = new EditLayers_Popup(Poi, model);
       layer_panel.setVisible(true);
       layer_panel.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
       
       model.serialize(); 
    }
    

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        Building bld = this.model.getBuilding(this.building);
        FloorMap floormap = bld.getFloorMap(this.floor);
        
        this.label.setVisible(false);
        
        ArrayList<Poi> poisAll = floormap.getPois();
        for(Poi pois : poisAll){
            if ((pois.getPos().getXPos() == this.Poi.getPos().getXPos()) && (pois.getPos().getYPos() == this.Poi.getPos().getYPos())){
                poisAll.remove(pois);
                break;
                
            }
        }
        model.serialize();
    }//GEN-LAST:event_DeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JCheckBox Fav;
    private javax.swing.JButton Layers;
    private javax.swing.JPanel base;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
