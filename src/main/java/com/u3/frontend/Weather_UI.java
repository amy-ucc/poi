package com.u3.frontend;

import java.text.SimpleDateFormat;  
import java.util.Date;  

import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 * The purpose of this class is to design a Weather UI to display current 
 * weather information retrieved from Open Weather API to users in an 
 * easy-to-understand manner. 
 * 
 * @author Sadiyah Sajjad 
 */
public class Weather_UI extends javax.swing.JFrame {

    // Create a new Weather_API object to retrieve the most current weather information
    Weather_API obj = new Weather_API();

    public int get_ResponseCode() {
        int responseCode = obj.get_ResponseCode();
        return obj.get_ResponseCode();
    }

    public Weather_UI() {
        initComponents();
        
        // Gets Current Date and Time and displays it in the date_time JLabel
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
        Date date = new Date();  
        date_time.setText(formatter.format(date));
        
        // Accesses weather icon image through icon URL and displays it in Weather_Icon JLabel
        Image image = null;
        try {
            String tempURL = "https://openweathermap.org/img/wn/";
            String icon = obj.get_Icon(); 
            String tempEnd= icon + "@2x.png";
            
            URL url = new URL(tempURL+tempEnd);
            image = ImageIO.read(url);
            Weather_Icon.setIcon(new ImageIcon(image));
        } catch (IOException e) {
            e.printStackTrace();

        }
            
        /**
         * Retrieves relevant current weather information from the getter methods in 
         * Weather_API class and stores them in variables 
        **/
            String current_temp = obj.get_currentTemp();
            String feel_temp = obj.get_feelsLike();
            String description = obj.get_description();
            String min_temp = obj.get_minTemp();
            String max_temp = obj.get_maxTemp();
            String pressure = obj.get_Pressure();
            String humidity = obj.get_Humidity();
            
         /**
          * Formats and displays the current weather information in the appropriate labels 
          */
            C_temp_value.setText(current_temp + "째C");
            feels_like.setText("Feels like " + feel_temp + "째C.");
            display_description.setText(description);
            min_temp_value.setText(min_temp + "째C");
            max_temp_value.setText(max_temp + "째C");
            pressure_value.setText(pressure+" hPA");
            humidity_value.setText(humidity+"%"); 
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main_Panel = new javax.swing.JPanel();
        City_Name = new javax.swing.JLabel();
        date_time = new javax.swing.JLabel();
        C_temp_value = new javax.swing.JLabel();
        feels_like = new javax.swing.JLabel();
        display_description = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Weather_Icon = new javax.swing.JLabel();
        Secondary_Panel = new javax.swing.JPanel();
        mintemp_label = new javax.swing.JLabel();
        min_temp_value = new javax.swing.JLabel();
        maxtemp_label = new javax.swing.JLabel();
        pressure_label = new javax.swing.JLabel();
        humidity_label = new javax.swing.JLabel();
        max_temp_value = new javax.swing.JLabel();
        pressure_value = new javax.swing.JLabel();
        humidity_value = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Main_Panel.setForeground(new java.awt.Color(204, 255, 255));

        City_Name.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        City_Name.setText("London, CA");

        date_time.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        date_time.setText("jLabel6");

        C_temp_value.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        C_temp_value.setText("jLabel6");

        feels_like.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        feels_like.setText("Default");

        display_description.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        display_description.setText("jLabel1");

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout Main_PanelLayout = new javax.swing.GroupLayout(Main_Panel);
        Main_Panel.setLayout(Main_PanelLayout);
        Main_PanelLayout.setHorizontalGroup(
            Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Main_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(C_temp_value, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(City_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_time, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Main_PanelLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feels_like, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(display_description, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Weather_Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        Main_PanelLayout.setVerticalGroup(
            Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Main_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Main_PanelLayout.createSequentialGroup()
                        .addComponent(City_Name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(date_time))
                    .addComponent(Weather_Icon, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Main_PanelLayout.createSequentialGroup()
                        .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Main_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(C_temp_value)
                                .addComponent(display_description))
                            .addComponent(feels_like))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );

        mintemp_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mintemp_label.setText("Min Temperature:");

        min_temp_value.setText("jLabel2");

        maxtemp_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        maxtemp_label.setText("Max Temperature:");

        pressure_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pressure_label.setText("Pressure: ");

        humidity_label.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        humidity_label.setText("Humidity: ");

        max_temp_value.setText("jLabel2");

        pressure_value.setText("jLabel2");

        humidity_value.setText("jLabel6");

        javax.swing.GroupLayout Secondary_PanelLayout = new javax.swing.GroupLayout(Secondary_Panel);
        Secondary_Panel.setLayout(Secondary_PanelLayout);
        Secondary_PanelLayout.setHorizontalGroup(
            Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Secondary_PanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(maxtemp_label, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addComponent(mintemp_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pressure_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(humidity_label, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(min_temp_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Secondary_PanelLayout.createSequentialGroup()
                        .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(max_temp_value, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(humidity_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                .addComponent(pressure_value, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Secondary_PanelLayout.setVerticalGroup(
            Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Secondary_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mintemp_label)
                    .addComponent(min_temp_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxtemp_label)
                    .addComponent(max_temp_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pressure_label)
                    .addComponent(pressure_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Secondary_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(humidity_label)
                    .addComponent(humidity_value))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Secondary_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(Main_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(Main_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Secondary_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /*
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
        Date date = new Date();  
        System.out.println(formatter.format(date));  
        */
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Weather_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Weather_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Weather_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Weather_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Weather_UI().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel C_temp_value;
    private javax.swing.JLabel City_Name;
    private javax.swing.JPanel Main_Panel;
    private javax.swing.JPanel Secondary_Panel;
    private javax.swing.JLabel Weather_Icon;
    private javax.swing.JLabel date_time;
    private javax.swing.JLabel display_description;
    private javax.swing.JLabel feels_like;
    private javax.swing.JLabel humidity_label;
    private javax.swing.JLabel humidity_value;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel max_temp_value;
    private javax.swing.JLabel maxtemp_label;
    private javax.swing.JLabel min_temp_value;
    private javax.swing.JLabel mintemp_label;
    private javax.swing.JLabel pressure_label;
    private javax.swing.JLabel pressure_value;
    // End of variables declaration//GEN-END:variables
}
